[{"/home/brian/Projects/Foodtography/client/src/index.js":"1","/home/brian/Projects/Foodtography/client/src/reportWebVitals.js":"2","/home/brian/Projects/Foodtography/client/src/App.js":"3","/home/brian/Projects/Foodtography/client/src/components/Home.js":"4","/home/brian/Projects/Foodtography/client/src/components/Image.js":"5","/home/brian/Projects/Foodtography/client/src/components/ImageList.js":"6","/home/brian/Projects/Foodtography/client/src/components/RestaurantList.js":"7","/home/brian/Projects/Foodtography/client/src/components/SearchBar.js":"8","/home/brian/Projects/Foodtography/client/src/components/Restaurant.js":"9","/home/brian/Projects/Foodtography/client/src/queries.js":"10","/home/brian/Projects/Foodtography/client/src/components/modal/UploadModal.js":"11"},{"size":513,"mtime":1651845219297,"results":"12","hashOfConfig":"13"},{"size":362,"mtime":1651417990103,"results":"14","hashOfConfig":"13"},{"size":3205,"mtime":1652235081252,"results":"15","hashOfConfig":"13"},{"size":91,"mtime":1651856888464,"results":"16","hashOfConfig":"13"},{"size":111,"mtime":1651851652642,"results":"17","hashOfConfig":"13"},{"size":1085,"mtime":1652281882607,"results":"18","hashOfConfig":"13"},{"size":2205,"mtime":1652128689268,"results":"19","hashOfConfig":"13"},{"size":1214,"mtime":1652127691111,"results":"20","hashOfConfig":"13"},{"size":1905,"mtime":1652234044636,"results":"21","hashOfConfig":"13"},{"size":3126,"mtime":1652234363087,"results":"22","hashOfConfig":"13"},{"size":4365,"mtime":1652235649258,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"f6zp62",{"filePath":"27","messages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"26"},{"filePath":"32","messages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"34","messages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"36","messages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"26"},"/home/brian/Projects/Foodtography/client/src/index.js",[],["49","50"],"/home/brian/Projects/Foodtography/client/src/reportWebVitals.js",[],"/home/brian/Projects/Foodtography/client/src/App.js",["51","52","53"],"import React, { useState } from \"react\";\nimport \"./App.css\";\nimport {\n    NavLink,\n    BrowserRouter as Router,\n    Route,\n    Routes,\n} from \"react-router-dom\";\nimport Home from \"./components/Home\";\n// import SignIn from \"./components/SignIn\";\nimport SearchBar from \"./components/SearchBar\";\nimport ImageList from \"./components/ImageList\";\nimport Image from \"./components/Image\";\nimport Restaurant from \"./components/Restaurant\";\nimport RestaurantList from \"./components/RestaurantList\";\nimport {\n    ApolloClient,\n    HttpLink,\n    InMemoryCache,\n    ApolloProvider,\n} from \"@apollo/client\";\nimport { createUploadLink } from \"apollo-upload-client\";\nconst client = new ApolloClient({\n    cache: new InMemoryCache(),\n    link: new createUploadLink({\n        uri: \"http://localhost:4000\",\n    }),\n});\n\nfunction App() {\n    return (\n        <ApolloProvider client={client}>\n            <Router>\n                <div>\n                    <header>\n                        <h1>Foodtography</h1>\n                        <nav>\n                            <NavLink to=\"/\">Foodtography</NavLink>\n                            <NavLink to=\"/login\">Login</NavLink>\n                        </nav>\n                        <SearchBar />\n                    </header>\n                    <br />\n                    <br />\n                    <div>\n                        <Routes>\n                            <Route path=\"/\" element={<Home />} />\n\n                            {/* copied from lecture slides might need to change format */}\n                            {/* <Route path=\"/home\" element={<PrivateRoute />}> */}\n                            {/* <Route path=\"/home\" element={<Home />} /> */}\n                            {/* </Route> */}\n                            {/* <Route path=\"/account\" element={<PrivateRoute />}> */}\n                            {/* <Route path=\"/account\" element={<Account />} /> */}\n                            {/* </Route> */}\n                            {/* copied from lecture slides might need to change format */}\n                            {/* \n                        <Route path=\"/signin\" element={<SignIn />} />\n                        <Route path=\"/signup\" element={<SignUp />} /> */}\n                            {/* <Route\n                                path=\"/image/food/page/:pagenum\"\n                                element={<ImageList />}\n                            />\n                            <Route\n                                path=\"/image/atmosphere/page/:pagenum\"\n                                element={<ImageList />}\n                            /> */}\n                            <Route path=\"/image/:id\" element={<Image />} />\n                            <Route\n                                path=\"/restaurants/:address\"\n                                element={<RestaurantList />}\n                            />\n                            <Route\n                                path=\"/restaurant/:id\"\n                                element={<Restaurant />}\n                            />\n                        </Routes>\n                    </div>\n                </div>\n            </Router>\n        </ApolloProvider>\n    );\n}\n\nexport default App;\n","/home/brian/Projects/Foodtography/client/src/components/Home.js",[],"/home/brian/Projects/Foodtography/client/src/components/Image.js",[],"/home/brian/Projects/Foodtography/client/src/components/ImageList.js",["54"],"/home/brian/Projects/Foodtography/client/src/components/RestaurantList.js",[],"/home/brian/Projects/Foodtography/client/src/components/SearchBar.js",[],"/home/brian/Projects/Foodtography/client/src/components/Restaurant.js",[],"/home/brian/Projects/Foodtography/client/src/queries.js",[],"/home/brian/Projects/Foodtography/client/src/components/modal/UploadModal.js",["55","56","57"],"import React, { useState } from \"react\";\nimport ReactModal from \"react-modal\";\nimport { useQuery, useMutation } from \"@apollo/client\";\n//Import the file where my query constants are defined\nimport queries from \"../../queries\";\nimport { useParams } from \"react-router-dom\";\n\n//For react-modal\nReactModal.setAppElement(\"#root\");\nconst customStyles = {\n    content: {\n        top: \"50%\",\n        left: \"50%\",\n        right: \"auto\",\n        bottom: \"auto\",\n        marginRight: \"-50%\",\n        transform: \"translate(-50%, -50%)\",\n        width: \"50%\",\n        border: \"1px solid #28547a\",\n        borderRadius: \"4px\",\n    },\n};\n\nfunction UploadModal(props) {\n    const [showhandleCloseUploadModal, setShowhandleCloseUploadModal] =\n        useState(props.isOpen);\n\n    let food = props.type === \"food\" ? true : false;\n\n    const [uploadImage] = useMutation(queries.UPLOAD_IMAGE, {\n        update(cache, { data: { uploadImage } }) {\n            const { restaurantImages } = cache.readQuery({\n                query: queries.GET_RESTAURANT_IMAGES,\n                variables: { rid: props.rid, food },\n            });\n            cache.writeQuery({\n                query: queries.GET_RESTAURANT_IMAGES,\n                data: {\n                    restaurantImages: restaurantImages.concat([uploadImage]),\n                },\n                variables: { rid: props.rid, food },\n            });\n        },\n    });\n\n    //   const [addEmployer] = useMutation(queries.UPLOAD_IMAGE, {\n    //     update(cache, {data: {addEmployer}}) {\n    //       const {employers} = cache.readQuery({\n    //         query: queries.GET_EMPLOYERS_WITH_EMPLOYEES\n    //       });\n    //       cache.writeQuery({\n    //         query: queries.GET_EMPLOYERS_WITH_EMPLOYEES,\n    //         data: {employers: employers.concat([addEmployer])}\n    //       });\n    //     }\n    //   });\n\n    //   const {data} = useQuery(queries.GET_EMPLOYERS);\n\n    const handleClosehandleCloseUploadModal = () => {\n        setShowhandleCloseUploadModal(true);\n        props.handleClose(false);\n    };\n\n    let body = null;\n    let imageDescription;\n    let file;\n    let userName;\n    body = (\n        <form\n            onSubmit={(e) => {\n                e.preventDefault();\n                console.log(file);\n                uploadImage({\n                    variables: {\n                        file: file.files[0],\n                        food: food,\n                        description: imageDescription.value,\n                        rid: props.rid,\n                        userName: \"Default value\",\n                    },\n                });\n                imageDescription.value = \"\";\n                // userName.value = \"default\";\n                setShowhandleCloseUploadModal(false);\n                alert(\"Image Added\");\n                props.handleClose();\n            }}\n        >\n            <div>\n                <label>\n                    Upload Image\n                    <br />\n                    <input\n                        type=\"file\"\n                        accept=\"image/jpeg, image/png, .jpeg, .jpg, .png\"\n                        ref={(node) => {\n                            file = node;\n                        }}\n                        required\n                        autoFocus={true}\n                    />\n                </label>\n            </div>\n            <br />\n            <div>\n                <label>\n                    Image Description\n                    <br />\n                    <input\n                        ref={(node) => {\n                            imageDescription = node;\n                        }}\n                        required\n                    />\n                </label>\n            </div>\n            <br />\n\n            <button type=\"submit\">Upload Picture</button>\n        </form>\n    );\n\n    return (\n        <div>\n            <ReactModal\n                name=\"handleCloseUploadModal\"\n                isOpen={showhandleCloseUploadModal}\n                contentLabel=\"Upload Modal\"\n                style={customStyles}\n            >\n                {body}\n                <button\n                    className=\"button cancel-button\"\n                    onClick={handleClosehandleCloseUploadModal}\n                >\n                    Cancel\n                </button>\n            </ReactModal>\n        </div>\n    );\n}\n\nexport default UploadModal;\n",{"ruleId":"58","replacedBy":"59"},{"ruleId":"60","replacedBy":"61"},{"ruleId":"62","severity":1,"message":"63","line":1,"column":17,"nodeType":"64","messageId":"65","endLine":1,"endColumn":25},{"ruleId":"62","severity":1,"message":"66","line":12,"column":8,"nodeType":"64","messageId":"65","endLine":12,"endColumn":17},{"ruleId":"62","severity":1,"message":"67","line":18,"column":5,"nodeType":"64","messageId":"65","endLine":18,"endColumn":13},{"ruleId":"68","severity":1,"message":"69","line":31,"column":20,"nodeType":"70","endLine":31,"endColumn":59},{"ruleId":"62","severity":1,"message":"71","line":3,"column":10,"nodeType":"64","messageId":"65","endLine":3,"endColumn":18},{"ruleId":"62","severity":1,"message":"72","line":6,"column":10,"nodeType":"64","messageId":"65","endLine":6,"endColumn":19},{"ruleId":"62","severity":1,"message":"73","line":68,"column":9,"nodeType":"64","messageId":"65","endLine":68,"endColumn":17},"no-native-reassign",["74"],"no-negated-in-lhs",["75"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'ImageList' is defined but never used.","'HttpLink' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'useQuery' is defined but never used.","'useParams' is defined but never used.","'userName' is defined but never used.","no-global-assign","no-unsafe-negation"]